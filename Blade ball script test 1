local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local localPlayer = Players.LocalPlayer

local parryEvent = ReplicatedStorage:WaitForChild("Remotes"):WaitForChild("Parry")
local autoParry = false
local parryRange = 25
local cooldown = 0.6
local lastParryTime = 0

-- Function to get current character's HRP
local function getHRP()
    local char = localPlayer.Character or localPlayer.CharacterAdded:Wait()
    return char:WaitForChild("HumanoidRootPart")
end

-- GUI Setup
local gui = Instance.new("ScreenGui")
gui.Name = "AutoParryGUI"
gui.ResetOnSpawn = false
gui.Parent = localPlayer:WaitForChild("PlayerGui")

local button = Instance.new("TextButton")
button.Size = UDim2.new(0, 120, 0, 40)
button.Position = UDim2.new(0, 20, 0, 100)
button.BackgroundColor3 = Color3.fromRGB(30, 150, 90)
button.Text = "Auto Parry: OFF"
button.TextColor3 = Color3.new(1, 1, 1)
button.TextScaled = true
button.Parent = gui
button.Active = true
button.Draggable = true

-- Toggle logic
button.MouseButton1Click:Connect(function()
    autoParry = not autoParry
    button.Text = "Auto Parry: " .. (autoParry and "ON" or "OFF")
    button.BackgroundColor3 = autoParry and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(150, 0, 0)
end)

-- Main auto parry function
local function checkForBall()
    local now = tick()
    if now - lastParryTime < cooldown then return end

    local hrp = getHRP()
    for _, obj in ipairs(workspace:GetChildren()) do
        if obj:IsA("Part") and obj.Name == "Ball" then
            local dist = (obj.Position - hrp.Position).Magnitude
            if dist <= parryRange then
                lastParryTime = now
                parryEvent:FireServer()
            end
        end
    end
end

-- Runs even after death
RunService.RenderStepped:Connect(function()
    if autoParry then
        pcall(checkForBall)
    end
end)
